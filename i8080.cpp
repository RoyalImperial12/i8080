#include "i8080.h"

using namespace i8080;

// All this at the top here is to avoid doing some comedically long switch statement when handling instructions.
// Believe me, another ~500-line switch statement is not something I want to do again...

bool arraySearch(Byte opcode, Byte insArray[]) {
	for (int i = 0; i <= sizeof(insArray); i++) {
		if (insArray[i] == opcode) {
			return true;
		}
	}
	return false;
}

Byte ACI[] = { 0xCE };
Byte ADC[] = { 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F };
Byte ADD[] = { 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87 };
Byte ADI[] = { 0xC6 };
Byte ANA[] = { 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7 };
Byte ANI[] = { 0xE6 };
Byte CALL[] = { 0xCD, 0xDD, 0xED, 0xFD };
Byte CC[] = { 0xDC };
Byte CM[] = { 0xFC };
Byte CMA[] = { 0x2F };
Byte CMC[] = { 0x3F };
Byte CMP[] = { 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF };
Byte CNC[] = { 0xD4 };
Byte CNZ[] = { 0xC4 };
Byte CP[] = { 0xF4 };
Byte CPE[] = { 0xEC };
Byte CPI[] = { 0xFE };
Byte CPO[] = { 0xE4 };
Byte CZ[] = { 0xCC };
Byte DAA[] = { 0x27 };
Byte DAD[] = { 0x09, 0x19, 0x29, 0x39 };
Byte DCR[] = { 0x05, 0x0D, 0x15, 0x1D, 0x25, 0x2D, 0x35, 0x3D };
Byte DCX[] = { 0x0B, 0x1B, 0x2B, 0x3B };